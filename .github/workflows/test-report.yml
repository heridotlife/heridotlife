name: Test Report

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  test-report:
    name: Test Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests with coverage
        run: pnpm test:coverage
        continue-on-error: true

      - name: Test Report Summary
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Vitest Tests
          path: 'coverage/junit.xml'
          reporter: 'java-junit'
          fail-on-error: false

      - name: Coverage Report
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true

      - name: Coverage Summary Comment
        if: github.event_name == 'pull_request'
        uses: MishaKav/jest-coverage-comment@v1.0.25
        with:
          coverage-path: ./coverage/coverage-summary.json
          junitxml-path: ./coverage/junit.xml
          title: Test Coverage Report
          badge-title: Coverage
          hide-comment: false
          create-new-comment: false
          hide-summary: false

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: test-results
          path: |
            coverage/
            tests/results/
          retention-days: 30

      - name: Check coverage thresholds
        if: github.event_name == 'pull_request'
        run: |
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          pnpm test:coverage --reporter=verbose 2>&1 | grep -A 20 "Coverage report" >> $GITHUB_STEP_SUMMARY || true
